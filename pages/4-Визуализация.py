from tkinter.tix import PopupMenu
from turtle import width
import streamlit as st
import leafmap
import pandas as pd
from streamlit_folium import folium_static, st_folium
import geemap.colormaps as cm
import geemap.foliumap as geemap
from geopy.geocoders import Nominatim


st.set_page_config(page_title="üó∫Ô∏è")
st.title("üó∫Ô∏è–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –∫–∞—Ä—Ç–∞—Öüó∫Ô∏è")
st.markdown(
    "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö"
)
BASEMAPS = ['Satellite', 'Roadmap', 'Terrain', 'Hybrid']
ADDRESS_DEFAULT = "Moscow, Russia"

hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

with st.sidebar:
    st.title("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    basemap = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –∫–∞—Ä—Ç—ã", BASEMAPS)
    if basemap in BASEMAPS:
        basemap=basemap.upper()

uploaded_file = st.file_uploader(
        label='–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ —Ñ–∞–π–ª', 
        type=['csv','xlsx'],accept_multiple_files=False,key="fileUploader")

if uploaded_file is not None:
    df=pd.read_excel(uploaded_file)
    selection = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü —Å —à–∏—Ä–æ—Ç–æ–π", df.columns.tolist())
    df["end_station_latitude"] = df[selection]
    selection = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü —Å –¥–æ–ª–≥–æ—Ç–æ–π", df.columns.tolist())
    df["end_station_longitude"] = df[selection]
    
    if df["end_station_latitude"].dtype == 'float64' \
    and df["end_station_longitude"].dtype == 'float64':
        df=df.dropna(subset=['end_station_longitude'])
        df=df.dropna(subset=['end_station_latitude'])
        df = df.drop_duplicates(['end_station_latitude', 'end_station_longitude'])
        df = df.reset_index()
        df.drop(columns='index', inplace=True)
        m = leafmap.Map(center=[df["end_station_latitude"][0], df["end_station_longitude"][0]], zoom=16)
        m.add_basemap('HYBRID')
        m.add_basemap('SATELLITE')
        m.add_basemap('ROADMAP')
        for i in df.index:
            lat = df['end_station_latitude'][i]
            long = df['end_station_longitude'][i]
            m.add_marker(location=(lat, long))
        m.to_streamlit()
        df = df.drop(columns=['end_station_latitude', 'end_station_longitude'])
        st.write(df)
        
       
        # –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è html'–∫–∏ –∫–∞—Ä—Ç—ã
        # if st.checkbox("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç—É"):
        MAP_FILE = 'google_map.html'
        m.to_html(MAP_FILE)
            
        with open(MAP_FILE, "rb") as file:
                btn = st.download_button(
                label="–°–∫–∞—á–∞—Ç—å –∫–∞—Ä—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ HTML",
                data=file,
                file_name=MAP_FILE,
                mime='text/html'
        ) 
    else:
        st.warning('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏')
else:
    st.warning('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ XLSX')